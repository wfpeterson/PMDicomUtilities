/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DICOMEcho.java
 *
 * Created on May 11, 2011, 11:37:38 PM
 */
package gov.va.med.imaging.dicom.pmcdimporter;

import com.pixelmed.network.VerificationSOPClassSCU;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author dcsipo
 */
public class DicomEchoDialog extends javax.swing.JDialog {

    private String CalledAETitle = "";
    private String CallingAETitle = "";
    private String Host;
    private Integer Port;
    
    /** Creates new form DICOMEcho */
    public DicomEchoDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Close = new javax.swing.JButton();
        Status1 = new javax.swing.JLabel();
        Status2 = new javax.swing.JLabel();
        Status3 = new javax.swing.JLabel();
        Status4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DICOM Echo");

        Close.setText("Close");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });

        Status1.setText("Status");

        Status2.setText("   ");

        Status3.setText("  ");

        Status4.setText("  ");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(Status1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                            .add(Status2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                            .add(Status3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                            .add(Status4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE))
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, Close)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(Status1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(Status2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(Status3)
                .add(18, 18, 18)
                .add(Status4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 20, Short.MAX_VALUE)
                .add(Close))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed

        this.setVisible(false);
    }//GEN-LAST:event_CloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                DicomEchoDialog dialog = new DicomEchoDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Close;
    private javax.swing.JLabel Status1;
    private javax.swing.JLabel Status2;
    private javax.swing.JLabel Status3;
    private javax.swing.JLabel Status4;
    // End of variables declaration//GEN-END:variables

    public void doEcho() {
        this.Status2.setText("Starting DICOM echo to:");
        this.Status3.setText(Host + ", " + Port + ", " + CalledAETitle);
        try {
            VerificationSOPClassSCU Scu = new VerificationSOPClassSCU(Host,Port,CalledAETitle,CallingAETitle,false,0);
            this.Status4.setText("Success");
        }
        catch (Exception e) {
            e.printStackTrace(System.err);
            this.Status4.setText("Failed");
        }

    }

    /**
     * @return the CalledAETitle
     */
    public String getCalledAETitle() {
        return CalledAETitle;
    }

    /**
     * @param CalledAETitle the CalledAETitle to set
     */
    public void setCalledAETitle(String CalledAETitle) {
        this.CalledAETitle = CalledAETitle;
        this.Status1.setText("Status: DICOM Echo to " + CalledAETitle);
    }

    /**
     * @return the CallingAETitel
     */
    public String getCallingAETitle() {
        return CallingAETitle;
    }

    /**
     * @param CallingAETitle the CallingAETitle to set
     */
    public void setCallingAETitle(String CallingAETitle) {
        this.CallingAETitle = CallingAETitle;
        this.Status1.setText(this.Status1.getText() + " from " + CallingAETitle);
    }

    /**
     * @return the Host
     */
    public String getHost() {
        return Host;
    }

    /**
     * @param Host the Host to set
     */
    public void setHost(String Host) {
        this.Host = Host;
    }

    /**
     * @return the Port
     */
    public Integer getPort() {
        return Port;
    }

    /**
     * @param Port the Port to set
     */
    public void setPort(Integer Port) {
        this.Port = Port;
    }
}
